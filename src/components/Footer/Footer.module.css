.Footer {
  grid-area: footer;
  display: grid;
  align-content: center;
  justify-items: center;
  padding: var(--spacing-tight);
  min-height: var(--footer-height);
  background-color: var(--color-brand);
}

/* TODO: We need to use a SCSS-like variable here */
@media screen and (min-width: 768px) {
  .Footer {
    grid-template-columns: auto auto;
    justify-items: unset;
    padding: var(--spacing-loose);
  }
}

.socialLinks {
  /*
   * Even though this does not actually contain any styles,
   * the variant className will still get added to the markup.
   * If we care about this, we could write some build tooling to parse
   * each declaration for contents and assign `undefined` if empty.
   * Alternatively, there might be a PostCSS plugin for this.
  */
}

.Children p {
  font-size: var(--font-size-subtext);
  font-weight: var(--font-weight-bold);
  color: var(--color-text);
}

.SocialList {
  display: flex;
  gap: var(--spacing-tight);
  margin-top: var(--spacing-loose);
}

/* TODO: We need to use a SCSS-like variable here */
@media screen and (min-width: 768px) {
  .SocialList {
    justify-content: end;
    margin-top: 0;
  }
}

.SocialItem {
}

.SocialIcon {
  width: var(--icon-size);
  height: var(--icon-size);
  color: var(--color-text);
}

/* TODO: Turn this into a `mixin` */
.SocialIcon svg {
  width: 100%;
  height: 100%;
  fill: currentColor;
}
